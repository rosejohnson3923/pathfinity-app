version: '3.8'

services:
  # Main Application
  pathfinity-app:
    image: pathfinity:latest
    container_name: pathfinity-app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - pathfinity-network
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: pathfinity-db
    environment:
      POSTGRES_DB: pathfinity
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - pathfinity-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pathfinity-cache
    command: redis-server --maxmemory 2gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - pathfinity-network

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: pathfinity-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - pathfinity-app
    restart: unless-stopped
    networks:
      - pathfinity-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: pathfinity-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - pathfinity-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: pathfinity-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - pathfinity-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  pathfinity-network:
    driver: bridge