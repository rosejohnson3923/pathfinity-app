-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.achievements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  title text NOT NULL,
  description text NOT NULL,
  icon text NOT NULL,
  category text NOT NULL CHECK (category = ANY (ARRAY['academic'::text, 'collaboration'::text, 'creativity'::text, 'leadership'::text, 'consistency'::text, 'special'::text])),
  rarity text DEFAULT 'common'::text CHECK (rarity = ANY (ARRAY['common'::text, 'rare'::text, 'epic'::text, 'legendary'::text])),
  points_value integer DEFAULT 0,
  criteria jsonb NOT NULL,
  is_active boolean DEFAULT true,
  is_repeatable boolean DEFAULT false,
  max_times_earnable integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT achievements_pkey PRIMARY KEY (id),
  CONSTRAINT achievements_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.assessments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  student_id uuid NOT NULL,
  skills_topic_id uuid,
  assessment_type text NOT NULL CHECK (assessment_type = ANY (ARRAY['diagnostic'::text, 'formative'::text, 'summative'::text, 'adaptive'::text])),
  questions jsonb NOT NULL,
  responses jsonb,
  score_percentage integer CHECK (score_percentage >= 0 AND score_percentage <= 100),
  mastery_demonstrated text CHECK (mastery_demonstrated = ANY (ARRAY['masters'::text, 'meets'::text, 'approaches'::text, 'does-not-meet'::text])),
  time_taken_minutes integer,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  status text DEFAULT 'not_started'::text CHECK (status = ANY (ARRAY['not_started'::text, 'in_progress'::text, 'completed'::text, 'abandoned'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT assessments_pkey PRIMARY KEY (id),
  CONSTRAINT assessments_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT assessments_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.user_profiles(id),
  CONSTRAINT assessments_skills_topic_id_fkey FOREIGN KEY (skills_topic_id) REFERENCES public.skills_topics(id)
);
CREATE TABLE public.collaboration_spaces (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  project_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  space_type text NOT NULL CHECK (space_type = ANY (ARRAY['chat'::text, 'whiteboard'::text, 'document'::text, 'code'::text, 'design'::text])),
  content jsonb DEFAULT '{}'::jsonb,
  settings jsonb DEFAULT '{}'::jsonb,
  last_activity_at timestamp with time zone DEFAULT now(),
  is_archived boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT collaboration_spaces_pkey PRIMARY KEY (id),
  CONSTRAINT collaboration_spaces_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT collaboration_spaces_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.content_library (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  creator_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  content_type text NOT NULL CHECK (content_type = ANY (ARRAY['lesson'::text, 'video'::text, 'document'::text, 'interactive'::text, 'assessment'::text, 'template'::text])),
  subject_areas ARRAY,
  grade_levels ARRAY,
  difficulty_level integer DEFAULT 1 CHECK (difficulty_level >= 1 AND difficulty_level <= 5),
  content_data jsonb NOT NULL,
  metadata jsonb DEFAULT '{}'::jsonb,
  file_urls ARRAY,
  thumbnail_url text,
  duration_minutes integer,
  language text DEFAULT 'en'::text,
  accessibility_features ARRAY,
  usage_rights text DEFAULT 'internal'::text CHECK (usage_rights = ANY (ARRAY['internal'::text, 'public'::text, 'licensed'::text])),
  view_count integer DEFAULT 0,
  rating_average numeric DEFAULT 0.0,
  rating_count integer DEFAULT 0,
  is_published boolean DEFAULT false,
  published_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT content_library_pkey PRIMARY KEY (id),
  CONSTRAINT content_library_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT content_library_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.creative_assets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  creator_id uuid NOT NULL,
  project_id uuid,
  title text NOT NULL,
  description text,
  asset_type text NOT NULL CHECK (asset_type = ANY (ARRAY['presentation'::text, 'poster'::text, 'infographic'::text, 'logo'::text, 'document'::text, 'template'::text])),
  design_data jsonb NOT NULL,
  preview_url text,
  export_urls jsonb DEFAULT '{}'::jsonb,
  template_category text,
  is_template boolean DEFAULT false,
  is_public boolean DEFAULT false,
  view_count integer DEFAULT 0,
  like_count integer DEFAULT 0,
  fork_count integer DEFAULT 0,
  version integer DEFAULT 1,
  parent_asset_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT creative_assets_pkey PRIMARY KEY (id),
  CONSTRAINT creative_assets_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.user_profiles(id),
  CONSTRAINT creative_assets_parent_asset_id_fkey FOREIGN KEY (parent_asset_id) REFERENCES public.creative_assets(id),
  CONSTRAINT creative_assets_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT creative_assets_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.daily_assignments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  student_id text NOT NULL,
  assignment_date date NOT NULL,
  skill_id uuid NOT NULL,
  subject text NOT NULL CHECK (subject = ANY (ARRAY['Math'::text, 'ELA'::text, 'Science'::text, 'SocialStudies'::text])),
  estimated_time_minutes integer NOT NULL CHECK (estimated_time_minutes > 0),
  assigned_tool text NOT NULL CHECK (assigned_tool = ANY (ARRAY['FinnSeeMathVisualizer'::text, 'FinnSeeChemicalVisualization'::text, 'FinnThinkPhysicsSolver'::text, 'BrandStudio'::text])),
  status text NOT NULL DEFAULT 'assigned'::text CHECK (status = ANY (ARRAY['assigned'::text, 'started'::text, 'completed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT daily_assignments_pkey PRIMARY KEY (id),
  CONSTRAINT daily_assignments_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills_master(id)
);
CREATE TABLE public.leaderboards (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  leaderboard_type text NOT NULL CHECK (leaderboard_type = ANY (ARRAY['points'::text, 'streaks'::text, 'achievements'::text, 'projects'::text, 'collaboration'::text])),
  scope text DEFAULT 'tenant'::text CHECK (scope = ANY (ARRAY['tenant'::text, 'grade'::text, 'subject'::text, 'class'::text])),
  scope_filter jsonb DEFAULT '{}'::jsonb,
  time_period text DEFAULT 'all_time'::text CHECK (time_period = ANY (ARRAY['daily'::text, 'weekly'::text, 'monthly'::text, 'semester'::text, 'all_time'::text])),
  max_entries integer DEFAULT 100,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT leaderboards_pkey PRIMARY KEY (id),
  CONSTRAINT leaderboards_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.learning_paths (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  student_id uuid NOT NULL,
  subject_id uuid NOT NULL,
  path_sequence ARRAY NOT NULL,
  current_position integer DEFAULT 0,
  adaptive_adjustments jsonb DEFAULT '{}'::jsonb,
  generated_at timestamp with time zone DEFAULT now(),
  last_updated timestamp with time zone DEFAULT now(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT learning_paths_pkey PRIMARY KEY (id),
  CONSTRAINT learning_paths_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT learning_paths_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.user_profiles(id),
  CONSTRAINT learning_paths_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.lesson_plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  student_id uuid NOT NULL,
  skills_topic_id uuid NOT NULL,
  lesson_type text NOT NULL CHECK (lesson_type = ANY (ARRAY['reinforcement'::text, 'pathway'::text, 'future_pathway'::text])),
  content jsonb NOT NULL,
  difficulty_adjustment integer DEFAULT 0,
  estimated_duration_minutes integer DEFAULT 30,
  scheduled_date date NOT NULL,
  status text DEFAULT 'scheduled'::text CHECK (status = ANY (ARRAY['scheduled'::text, 'in_progress'::text, 'completed'::text, 'skipped'::text])),
  completion_percentage integer DEFAULT 0 CHECK (completion_percentage >= 0 AND completion_percentage <= 100),
  time_spent_minutes integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT lesson_plans_pkey PRIMARY KEY (id),
  CONSTRAINT lesson_plans_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT lesson_plans_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.user_profiles(id),
  CONSTRAINT lesson_plans_skills_topic_id_fkey FOREIGN KEY (skills_topic_id) REFERENCES public.skills_topics(id)
);
CREATE TABLE public.live_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  host_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  session_type text DEFAULT 'class'::text CHECK (session_type = ANY (ARRAY['class'::text, 'meeting'::text, 'presentation'::text, 'workshop'::text, 'office_hours'::text])),
  subject_area text,
  grade_level text,
  max_participants integer DEFAULT 50,
  scheduled_start timestamp with time zone NOT NULL,
  scheduled_end timestamp with time zone NOT NULL,
  actual_start timestamp with time zone,
  actual_end timestamp with time zone,
  meeting_url text,
  meeting_id text,
  passcode text,
  settings jsonb DEFAULT '{}'::jsonb,
  status text DEFAULT 'scheduled'::text CHECK (status = ANY (ARRAY['scheduled'::text, 'live'::text, 'ended'::text, 'cancelled'::text])),
  recording_url text,
  attendance_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT live_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT live_sessions_host_id_fkey FOREIGN KEY (host_id) REFERENCES public.user_profiles(id),
  CONSTRAINT live_sessions_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.mastery_groups (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  subject_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  grade_level text NOT NULL,
  sequence_order integer NOT NULL DEFAULT 1,
  prerequisites ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT mastery_groups_pkey PRIMARY KEY (id),
  CONSTRAINT mastery_groups_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT mastery_groups_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.media_files (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  uploader_id uuid NOT NULL,
  filename text NOT NULL,
  original_filename text NOT NULL,
  file_type text NOT NULL,
  file_size_bytes bigint NOT NULL,
  storage_path text NOT NULL,
  public_url text,
  thumbnail_url text,
  metadata jsonb DEFAULT '{}'::jsonb,
  processing_status text DEFAULT 'pending'::text CHECK (processing_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text])),
  virus_scan_status text DEFAULT 'pending'::text CHECK (virus_scan_status = ANY (ARRAY['pending'::text, 'clean'::text, 'infected'::text])),
  access_level text DEFAULT 'private'::text CHECK (access_level = ANY (ARRAY['private'::text, 'tenant'::text, 'public'::text])),
  download_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT media_files_pkey PRIMARY KEY (id),
  CONSTRAINT media_files_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT media_files_uploader_id_fkey FOREIGN KEY (uploader_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.mentorships (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  project_id uuid,
  mentor_id uuid NOT NULL,
  mentee_id uuid NOT NULL,
  subject_area text NOT NULL,
  mentorship_type text DEFAULT 'project'::text CHECK (mentorship_type = ANY (ARRAY['project'::text, 'ongoing'::text, 'career'::text])),
  goals ARRAY,
  meeting_schedule text,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['pending'::text, 'active'::text, 'paused'::text, 'completed'::text])),
  start_date date DEFAULT CURRENT_DATE,
  end_date date,
  feedback_rating integer CHECK (feedback_rating >= 1 AND feedback_rating <= 5),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT mentorships_pkey PRIMARY KEY (id),
  CONSTRAINT mentorships_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT mentorships_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT mentorships_mentor_id_fkey FOREIGN KEY (mentor_id) REFERENCES public.user_profiles(id),
  CONSTRAINT mentorships_mentee_id_fkey FOREIGN KEY (mentee_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.peer_reviews (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  project_id uuid NOT NULL,
  reviewer_id uuid NOT NULL,
  reviewee_id uuid NOT NULL,
  submission_id uuid,
  criteria jsonb NOT NULL,
  scores jsonb NOT NULL,
  comments text,
  overall_rating integer CHECK (overall_rating >= 1 AND overall_rating <= 5),
  is_anonymous boolean DEFAULT true,
  submitted_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT peer_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT peer_reviews_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT peer_reviews_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT peer_reviews_reviewer_id_fkey FOREIGN KEY (reviewer_id) REFERENCES public.user_profiles(id),
  CONSTRAINT peer_reviews_reviewee_id_fkey FOREIGN KEY (reviewee_id) REFERENCES public.user_profiles(id),
  CONSTRAINT peer_reviews_submission_id_fkey FOREIGN KEY (submission_id) REFERENCES public.project_submissions(id)
);
CREATE TABLE public.points_transactions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  transaction_type text NOT NULL CHECK (transaction_type = ANY (ARRAY['earned'::text, 'spent'::text, 'bonus'::text, 'penalty'::text, 'adjustment'::text])),
  points_amount integer NOT NULL,
  source_type text NOT NULL CHECK (source_type = ANY (ARRAY['lesson'::text, 'assessment'::text, 'project'::text, 'collaboration'::text, 'achievement'::text, 'streak'::text, 'reward'::text, 'manual'::text])),
  source_id uuid,
  description text NOT NULL,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT points_transactions_pkey PRIMARY KEY (id),
  CONSTRAINT points_transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT points_transactions_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.project_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  project_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role text DEFAULT 'member'::text CHECK (role = ANY (ARRAY['leader'::text, 'member'::text, 'mentor'::text, 'observer'::text])),
  joined_at timestamp with time zone DEFAULT now(),
  contribution_score integer DEFAULT 0,
  status text DEFAULT 'active'::text CHECK (status = ANY (ARRAY['invited'::text, 'active'::text, 'inactive'::text, 'removed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_members_pkey PRIMARY KEY (id),
  CONSTRAINT project_members_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT project_members_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT project_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.project_submissions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  project_id uuid NOT NULL,
  submitter_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  submission_type text NOT NULL CHECK (submission_type = ANY (ARRAY['milestone'::text, 'draft'::text, 'final'::text, 'revision'::text])),
  content jsonb NOT NULL,
  feedback jsonb DEFAULT '{}'::jsonb,
  grade_percentage integer CHECK (grade_percentage >= 0 AND grade_percentage <= 100),
  submitted_at timestamp with time zone DEFAULT now(),
  reviewed_at timestamp with time zone,
  status text DEFAULT 'submitted'::text CHECK (status = ANY (ARRAY['draft'::text, 'submitted'::text, 'under_review'::text, 'approved'::text, 'needs_revision'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_submissions_pkey PRIMARY KEY (id),
  CONSTRAINT project_submissions_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT project_submissions_submitter_id_fkey FOREIGN KEY (submitter_id) REFERENCES public.user_profiles(id),
  CONSTRAINT project_submissions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.projects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  creator_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  project_type text DEFAULT 'collaborative'::text CHECK (project_type = ANY (ARRAY['individual'::text, 'collaborative'::text, 'mentored'::text])),
  subject_areas ARRAY,
  difficulty_level integer DEFAULT 1 CHECK (difficulty_level >= 1 AND difficulty_level <= 5),
  estimated_duration_days integer DEFAULT 7,
  max_team_size integer DEFAULT 4,
  skills_required ARRAY,
  skills_gained ARRAY,
  resources jsonb DEFAULT '{}'::jsonb,
  rubric jsonb,
  status text DEFAULT 'draft'::text CHECK (status = ANY (ARRAY['draft'::text, 'published'::text, 'in_progress'::text, 'completed'::text, 'archived'::text])),
  start_date date,
  due_date date,
  is_template boolean DEFAULT false,
  template_category text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT projects_pkey PRIMARY KEY (id),
  CONSTRAINT projects_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT projects_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.recordings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  session_id uuid,
  creator_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  recording_type text NOT NULL CHECK (recording_type = ANY (ARRAY['live_session'::text, 'lesson'::text, 'presentation'::text, 'student_work'::text])),
  file_url text NOT NULL,
  thumbnail_url text,
  duration_minutes integer,
  file_size_bytes bigint,
  transcript_url text,
  captions_url text,
  chapters jsonb DEFAULT '[]'::jsonb,
  view_count integer DEFAULT 0,
  access_level text DEFAULT 'private'::text CHECK (access_level = ANY (ARRAY['private'::text, 'class'::text, 'tenant'::text, 'public'::text])),
  processing_status text DEFAULT 'pending'::text CHECK (processing_status = ANY (ARRAY['pending'::text, 'processing'::text, 'completed'::text, 'failed'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT recordings_pkey PRIMARY KEY (id),
  CONSTRAINT recordings_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT recordings_creator_id_fkey FOREIGN KEY (creator_id) REFERENCES public.user_profiles(id),
  CONSTRAINT recordings_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.live_sessions(id)
);
CREATE TABLE public.rewards (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  title text NOT NULL,
  description text NOT NULL,
  reward_type text NOT NULL CHECK (reward_type = ANY (ARRAY['privilege'::text, 'item'::text, 'experience'::text, 'recognition'::text])),
  points_cost integer NOT NULL,
  quantity_available integer,
  quantity_redeemed integer DEFAULT 0,
  is_active boolean DEFAULT true,
  valid_from date DEFAULT CURRENT_DATE,
  valid_until date,
  redemption_instructions text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT rewards_pkey PRIMARY KEY (id),
  CONSTRAINT rewards_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.session_participants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  session_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role text DEFAULT 'participant'::text CHECK (role = ANY (ARRAY['host'::text, 'co_host'::text, 'participant'::text, 'observer'::text])),
  joined_at timestamp with time zone,
  left_at timestamp with time zone,
  duration_minutes integer DEFAULT 0,
  participation_score integer DEFAULT 0 CHECK (participation_score >= 0 AND participation_score <= 100),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT session_participants_pkey PRIMARY KEY (id),
  CONSTRAINT session_participants_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT session_participants_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT session_participants_session_id_fkey FOREIGN KEY (session_id) REFERENCES public.live_sessions(id)
);
CREATE TABLE public.skills_master (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  subject text NOT NULL CHECK (subject = ANY (ARRAY['Math'::text, 'ELA'::text, 'Science'::text, 'SocialStudies'::text, 'Algebra1'::text, 'Precalculus'::text])),
  grade text NOT NULL CHECK (grade = ANY (ARRAY['Pre-K'::text, 'K'::text, '1'::text, '3'::text, '7'::text, '10'::text, 'Algebra1'::text, 'Precalculus'::text])),
  skills_area text NOT NULL,
  skills_cluster text NOT NULL,
  skill_number text NOT NULL,
  skill_name text NOT NULL,
  skill_description text,
  difficulty_level integer NOT NULL CHECK (difficulty_level >= 1 AND difficulty_level <= 10),
  estimated_time_minutes integer NOT NULL CHECK (estimated_time_minutes > 0),
  prerequisites ARRAY,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skills_master_pkey PRIMARY KEY (id)
);
CREATE TABLE public.skills_topics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  mastery_group_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  learning_objectives ARRAY,
  difficulty_level integer DEFAULT 1 CHECK (difficulty_level >= 1 AND difficulty_level <= 5),
  estimated_duration_minutes integer DEFAULT 30,
  sequence_order integer NOT NULL DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT skills_topics_pkey PRIMARY KEY (id),
  CONSTRAINT skills_topics_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT skills_topics_mastery_group_id_fkey FOREIGN KEY (mastery_group_id) REFERENCES public.mastery_groups(id)
);
CREATE TABLE public.streaks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  streak_type text NOT NULL CHECK (streak_type = ANY (ARRAY['daily_login'::text, 'lesson_completion'::text, 'subject_specific'::text, 'project_activity'::text])),
  subject_id uuid,
  current_count integer DEFAULT 0,
  longest_count integer DEFAULT 0,
  last_activity_date date,
  streak_start_date date,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT streaks_pkey PRIMARY KEY (id),
  CONSTRAINT streaks_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT streaks_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT streaks_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id)
);
CREATE TABLE public.student_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  display_name text NOT NULL,
  grade_level text NOT NULL CHECK (grade_level = ANY (ARRAY['Pre-K'::text, 'K'::text, '1'::text, '2'::text, '3'::text, '4'::text, '5'::text, '6'::text, '7'::text, '8'::text, '9'::text, '10'::text, '11'::text, '12'::text])),
  date_of_birth date,
  enrollment_date date NOT NULL DEFAULT CURRENT_DATE,
  learning_preferences jsonb DEFAULT '{}'::jsonb,
  parent_email text,
  school_id text,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT student_profiles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.student_progress (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  student_id uuid NOT NULL,
  subject_id uuid NOT NULL,
  mastery_group_id uuid,
  skills_topic_id uuid,
  mastery_level text NOT NULL DEFAULT 'does-not-meet'::text CHECK (mastery_level = ANY (ARRAY['masters'::text, 'meets'::text, 'approaches'::text, 'does-not-meet'::text])),
  progress_percentage integer DEFAULT 0 CHECK (progress_percentage >= 0 AND progress_percentage <= 100),
  streak_days integer DEFAULT 0,
  last_activity_date date,
  total_time_spent_minutes integer DEFAULT 0,
  lessons_completed integer DEFAULT 0,
  assessments_passed integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT student_progress_pkey PRIMARY KEY (id),
  CONSTRAINT student_progress_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT student_progress_student_id_fkey FOREIGN KEY (student_id) REFERENCES public.user_profiles(id),
  CONSTRAINT student_progress_subject_id_fkey FOREIGN KEY (subject_id) REFERENCES public.subjects(id),
  CONSTRAINT student_progress_mastery_group_id_fkey FOREIGN KEY (mastery_group_id) REFERENCES public.mastery_groups(id),
  CONSTRAINT student_progress_skills_topic_id_fkey FOREIGN KEY (skills_topic_id) REFERENCES public.skills_topics(id)
);
CREATE TABLE public.student_skill_progress (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  student_id text NOT NULL,
  skill_id uuid NOT NULL,
  status text NOT NULL DEFAULT 'not_started'::text CHECK (status = ANY (ARRAY['not_started'::text, 'in_progress'::text, 'completed'::text, 'mastered'::text])),
  attempts integer DEFAULT 0 CHECK (attempts >= 0),
  score numeric CHECK (score >= 0::numeric AND score <= 1::numeric),
  time_spent_minutes integer DEFAULT 0 CHECK (time_spent_minutes >= 0),
  completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT student_skill_progress_pkey PRIMARY KEY (id),
  CONSTRAINT student_skill_progress_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills_master(id)
);
CREATE TABLE public.subjects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  code text NOT NULL,
  grade_levels ARRAY NOT NULL,
  description text,
  color text DEFAULT '#3B82F6'::text,
  icon text DEFAULT 'book-open'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subjects_pkey PRIMARY KEY (id),
  CONSTRAINT subjects_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.tenants (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  slug text NOT NULL UNIQUE,
  domain text,
  settings jsonb DEFAULT '{}'::jsonb,
  subscription_tier text DEFAULT 'basic'::text CHECK (subscription_tier = ANY (ARRAY['basic'::text, 'premium'::text, 'enterprise'::text])),
  max_users integer DEFAULT 100,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tenants_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_achievements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  achievement_id uuid NOT NULL,
  earned_at timestamp with time zone DEFAULT now(),
  progress_data jsonb DEFAULT '{}'::jsonb,
  times_earned integer DEFAULT 1,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_achievements_pkey PRIMARY KEY (id),
  CONSTRAINT user_achievements_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT user_achievements_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT user_achievements_achievement_id_fkey FOREIGN KEY (achievement_id) REFERENCES public.achievements(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL,
  tenant_id uuid NOT NULL,
  email text NOT NULL,
  full_name text NOT NULL,
  avatar_url text,
  role text DEFAULT 'student'::text CHECK (role = ANY (ARRAY['student'::text, 'educator'::text, 'admin'::text, 'product_admin'::text])),
  grade_level text,
  subjects ARRAY,
  preferences jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT user_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_reward_redemptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  tenant_id uuid NOT NULL,
  user_id uuid NOT NULL,
  reward_id uuid NOT NULL,
  points_spent integer NOT NULL,
  redeemed_at timestamp with time zone DEFAULT now(),
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'fulfilled'::text, 'cancelled'::text])),
  fulfillment_notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_reward_redemptions_pkey PRIMARY KEY (id),
  CONSTRAINT user_reward_redemptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT user_reward_redemptions_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT user_reward_redemptions_reward_id_fkey FOREIGN KEY (reward_id) REFERENCES public.rewards(id)
);