# ================================================================
# PATHFINITY PRODUCTION NGINX CONFIGURATION
# High-performance load balancer and reverse proxy
# ================================================================

# Main context
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimized for high performance
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # ================================================================
    # BASIC CONFIGURATION
    # ================================================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # ================================================================
    # PERFORMANCE OPTIMIZATIONS
    # ================================================================
    
    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # ================================================================
    # COMPRESSION
    # ================================================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # ================================================================
    # SECURITY HEADERS
    # ================================================================
    
    # Security headers for all responses
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.pathfinity.ai https://*.openai.azure.com; media-src 'self'; object-src 'none'; frame-src 'none';" always;
    
    # HSTS (uncomment when SSL is properly configured)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # ================================================================
    # RATE LIMITING
    # ================================================================
    
    # Define rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=ai:10m rate=10r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # ================================================================
    # UPSTREAM SERVERS
    # ================================================================
    
    upstream pathfinity_app {
        least_conn;
        server pathfinity-app:3000 max_fails=3 fail_timeout=30s;
        # Add more app servers for load balancing
        # server pathfinity-app-2:3000 max_fails=3 fail_timeout=30s;
        # server pathfinity-app-3:3000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }
    
    # ================================================================
    # CACHING
    # ================================================================
    
    # Cache paths
    proxy_cache_path /var/cache/nginx/pathfinity levels=1:2 keys_zone=pathfinity_cache:10m max_size=1g inactive=60m use_temp_path=off;
    
    # Cache for static assets
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=2g inactive=30d use_temp_path=off;
    
    # ================================================================
    # SSL CONFIGURATION (for HTTPS)
    # ================================================================
    
    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA;
    ssl_prefer_server_ciphers off;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # ================================================================
    # MAIN SERVER BLOCK (HTTPS)
    # ================================================================
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name pathfinity.ai www.pathfinity.ai;
        
        # SSL certificates (update paths as needed)
        ssl_certificate /etc/nginx/ssl/pathfinity.ai.crt;
        ssl_certificate_key /etc/nginx/ssl/pathfinity.ai.key;
        
        # Root and index
        root /var/www/pathfinity;
        index index.html;
        
        # Connection limiting
        limit_conn addr 20;
        
        # ================================================================
        # STATIC ASSETS
        # ================================================================
        
        # Static files with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Enable caching
            proxy_cache static_cache;
            proxy_cache_valid 200 302 30d;
            proxy_cache_valid 404 1m;
            
            try_files $uri @app;
        }
        
        # ================================================================
        # API ROUTES
        # ================================================================
        
        # AI character interactions (stricter rate limiting)
        location /api/characters {
            limit_req zone=ai burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://pathfinity_app;
            include /etc/nginx/proxy_params;
            
            # Special headers for AI endpoints
            proxy_set_header X-AI-Request "true";
            proxy_read_timeout 120s;
        }
        
        # Authentication endpoints (stricter rate limiting)
        location /api/auth {
            limit_req zone=login burst=3 nodelay;
            limit_req_status 429;
            
            proxy_pass http://pathfinity_app;
            include /etc/nginx/proxy_params;
        }
        
        # General API endpoints
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            limit_req_status 429;
            
            # Enable caching for GET requests
            proxy_cache pathfinity_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # Bypass cache for POST, PUT, DELETE
            proxy_cache_bypass $request_method ~* "POST|PUT|DELETE";
            proxy_no_cache $request_method ~* "POST|PUT|DELETE";
            
            proxy_pass http://pathfinity_app;
            include /etc/nginx/proxy_params;
        }
        
        # ================================================================
        # HEALTH CHECKS AND MONITORING
        # ================================================================
        
        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://pathfinity_app;
            include /etc/nginx/proxy_params;
            
            access_log off;
        }
        
        # Metrics endpoint (restricted access)
        location /metrics {
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://pathfinity_app;
            include /etc/nginx/proxy_params;
        }
        
        # ================================================================
        # SPA ROUTING
        # ================================================================
        
        # React app routing (catch-all)
        location / {
            limit_req zone=general burst=20 nodelay;
            
            try_files $uri $uri/ @app;
            
            # Cache HTML files for short time
            location ~* \.html$ {
                expires 1h;
                add_header Cache-Control "public, must-revalidate";
            }
        }
        
        # Fallback to app server
        location @app {
            proxy_pass http://pathfinity_app;
            include /etc/nginx/proxy_params;
        }
        
        # ================================================================
        # SECURITY LOCATIONS
        # ================================================================
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block access to configuration files
        location ~* \.(conf|env|json|sql|sh)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # ================================================================
        # ERROR PAGES
        # ================================================================
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /var/www/error-pages;
            internal;
        }
        
        location = /50x.html {
            root /var/www/error-pages;
            internal;
        }
        
        # Custom rate limit error page
        error_page 429 /429.html;
        location = /429.html {
            root /var/www/error-pages;
            internal;
        }
    }
    
    # ================================================================
    # HTTP TO HTTPS REDIRECT
    # ================================================================
    
    server {
        listen 80;
        listen [::]:80;
        server_name pathfinity.ai www.pathfinity.ai;
        
        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect all HTTP to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # ================================================================
    # MONITORING AND STATUS SERVER
    # ================================================================
    
    server {
        listen 8080;
        server_name localhost;
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # Upstream status
        location /upstream_status {
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            return 200 "Upstream servers status check\n";
            add_header Content-Type text/plain;
        }
    }
}

# ================================================================
# STREAM CONTEXT (for TCP load balancing if needed)
# ================================================================

# Uncomment if you need TCP load balancing for database connections
# stream {
#     upstream database {
#         server db1.pathfinity.ai:5432;
#         server db2.pathfinity.ai:5432;
#     }
#     
#     server {
#         listen 5432;
#         proxy_pass database;
#         proxy_timeout 1s;
#         proxy_responses 1;
#         error_log /var/log/nginx/database.log;
#     }
# }